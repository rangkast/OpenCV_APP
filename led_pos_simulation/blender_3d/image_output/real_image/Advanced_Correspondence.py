from Advanced_Correspondence_Class import *

'''
1. Model DATA neighbours lists 만들기
    - 각 id에서 내각 90이내 grouping
    - 거리로 sorting
2. 2D Blob Undistort Points
3. 각 2D Blob에서 5개까지 neighbours lists 만들기
    - 거리로 sorting
4. Model DATA와 2D blobs의 조합
5. lambda twist
6. 4번째 led로 checking
7. matching led score 계산
    - 6번에서 만족된 pose로 visible led를 찾음
    - projectPonts하여 몇개나 box안에 들어오는지 check
'''


'''
Real Data test

'''

if __name__ == "__main__":
    pebble_camera_matrix = [
        # 0번 sensor
        [np.array([[240.699213, 0.0, 313.735554],
                [0.0, 240.394949, 235.316344],
                [0.0, 0.0, 1.0]], dtype=np.float64),
        np.array([[0.040384], [-0.015174], [-0.000401], [-0.000584]], dtype=np.float64)],
    ]

    MODEL_DATA = np.array([
    [-0.03670253, -0.00136743, -0.00683186],
    [-0.04727607,  0.01015054,  0.00304395],
    [-0.05133603,  0.02573107,  0.01582152],
    [-0.0452342 ,  0.04188155,  0.03007053],
    [-0.02946931,  0.0556688 ,  0.04175622],
    [-0.01309678,  0.06193449,  0.0466701 ],
    [0.00930992, 0.0623894 , 0.0474525 ],
    [0.02620113, 0.05744795, 0.04307233],
    [0.0446104 , 0.04333093, 0.03110736],
    [0.05094375, 0.02902339, 0.0188578 ],
    [0.04827114, 0.01225686, 0.00472355],
    [ 0.03652419, -0.00134508, -0.00666003],
    [-0.02510102, -0.00254808, -0.02415428],
    [-0.03632259,  0.00511761, -0.01786462],
    [-0.05074652,  0.03046963,  0.00159084],
    [-0.04730652,  0.04610049,  0.01385638],
    [-0.03579857,  0.05931999,  0.02416381],
    [-0.01468638,  0.06936861,  0.03150711],
    [0.02063129, 0.06767503, 0.03060774],
    [0.04178583, 0.05421194, 0.02005855],
    [0.05023091, 0.03809911, 0.00740663],
    [ 0.03636108,  0.00516153, -0.01790085],
    [ 0.02493721, -0.00263817, -0.02406681],
    ], dtype=np.float64)

    DIRECTION = np.array([
    [-0.75584205, -0.62542513, -0.19376841],
    [-9.0003042e-01, -4.3582690e-01,  3.9198000e-04],
    [-0.95576858, -0.0870913 ,  0.28092976],
    [-0.84107304,  0.28591898,  0.45918022],
    [-0.54169635,  0.61032771,  0.57798369],
    [-0.23536262,  0.71232422,  0.66120998],
    [0.16887833, 0.72298488, 0.66990519],
    [0.48070836, 0.64946134, 0.58916843],
    [0.82528168, 0.31942899, 0.46569869],
    [ 0.94275266, -0.02286877,  0.33270775],
    [ 0.92057199, -0.37444458,  0.11107864],
    [ 0.75584205, -0.62542513, -0.19376841],
    [-0.64331363, -0.49735623, -0.58205185],
    [-0.74783871, -0.40384633, -0.52692068],
    [-0.93983665,  0.22402799, -0.25791187],
    [-0.8465559 ,  0.52839868, -0.06432689],
    [-0.62648053,  0.77498893,  0.08315228],
    [-0.25119497,  0.95204283,  0.17468698],
    [0.35282319, 0.92066384, 0.16701463],
    [0.73368009, 0.67912607, 0.02238979],
    [ 0.90365993,  0.38806909, -0.18111078],
    [ 0.74783871, -0.40384633, -0.52692068],
    [ 0.57732451, -0.53728441, -0.61483484],
    ], dtype=np.float64)

    # points2D_D 초기화
    points2D_D = np.array([
        [447.979401, 144.898239],
        [435.574677, 145.552032],
        [411.985107, 146.596695],
        [391.150848, 148.510162],
        [398.024750, 147.767563],
        [450.171570, 154.882889],
        [440.099121, 156.250366],
        [393.340179, 158.017059],
        [414.117188, 157.718704],
        [429.436829, 157.300140],
        [403.095795, 158.119385]
    ], dtype=np.float64)

    print('PTS')
    for i, leds in enumerate(MODEL_DATA):
        print(f"{np.array2string(leds, separator=', ')},")
    print('DIR')
    for i, dir in enumerate(DIRECTION):
        print(f"{np.array2string(dir, separator=', ')},")

    # show_calibrate_data(np.array(MODEL_DATA), np.array(DIRECTION))
    
    _, SEARCH_MODEL = led_search_candidate_new(MODEL_DATA, DIRECTION)
    SEARCH_BLOBS, points2D_U = correspondence_search_set_blobs(points2D_D, pebble_camera_matrix)
    DATA_SET = (MODEL_DATA, DIRECTION, SEARCH_MODEL, SEARCH_BLOBS, pebble_camera_matrix, points2D_D, points2D_U)
    long_search_python(DATA_SET)











