from Advanced_Function import *


def compute_weighted_center(matrix):
    """
    Calculate the weighted center of a 2D matrix.

    Parameters:
    - matrix (list of list of int/float): 2D matrix where each value is considered as weight.

    Returns:
    - tuple: (x, y) representing the weighted center.
    """
    x_sum = 0
    y_sum = 0
    total_weight = 0

    for y, row in enumerate(matrix):
        for x, value in enumerate(row):
            x_sum += x * value
            y_sum += y * value
            total_weight += value

    if total_weight == 0:
        return 0, 0

    center_x = x_sum / total_weight
    center_y = y_sum / total_weight

    return round(center_x, 8), round(center_y, 8)

import math

import math

def find_gradient(matrix):
    # 중심점 계산
    center_x, center_y = compute_weighted_center(matrix)
    
    print(f"Center: ({center_x}, {center_y})")

    # 중심점에서 가장 먼 지점을 찾는다.
    max_distance = 0
    outer_x, outer_y = None, None

    for y, row in enumerate(matrix):
        for x, val in enumerate(row):
            if val != 0:  # 0이 아닌 경우에만 계산
                distance = math.sqrt((x - center_x)**2 + (y - center_y)**2)
                if distance > max_distance:
                    max_distance = distance
                    outer_x, outer_y = x, y

    print(f"Outer Point: ({outer_x}, {outer_y})")

    # 중심점과 선택된 외곽 지점 사이의 거리를 255로 나누어 경사도 계산
    gradient = max_distance / 255

    return gradient


rifts_matrix = [
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 51, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 51, 56, 58, 59, 53, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 52, 57, 65, 76, 83, 84, 75, 59, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 52, 63, 80, 117, 189, 255, 255, 189, 110, 73, 54, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 61, 89, 163, 255, 255, 255, 255, 255, 255, 137, 75, 54, 0, 0, 0],
    [0, 0, 0, 0, 56, 78, 145, 255, 255, 255, 255, 255, 255, 255, 255, 108, 65, 0, 0, 0],
    [0, 0, 0, 55, 63, 97, 237, 255, 255, 255, 255, 255, 255, 255, 255, 153, 74, 51, 0, 0],
    [0, 0, 0, 55, 71, 110, 255, 255, 255, 255, 255, 255, 255, 255, 255, 205, 84, 59, 0, 0],
    [0, 0, 53, 59, 72, 107, 255, 255, 255, 255, 255, 255, 255, 255, 255, 189, 81, 59, 0, 0],
    [0, 0, 0, 57, 62, 94, 203, 255, 255, 255, 255, 255, 255, 255, 255, 139, 75, 56, 0, 0],
    [0, 0, 0, 51, 57, 78, 126, 255, 255, 255, 255, 255, 255, 255, 236, 101, 65, 51, 0, 0],
    [0, 0, 0, 0, 53, 61, 87, 125, 216, 255, 255, 255, 255, 220, 107, 70, 53, 0, 0, 0],
    [0, 0, 0, 0, 0, 53, 64, 75, 94, 128, 151, 149, 118, 89, 69, 57, 51, 0, 0, 0],
    [0, 0, 0, 0, 0, 51, 54, 60, 66, 75, 78, 77, 72, 63, 54, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 52, 56, 61, 60, 57, 55, 53, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 51, 51, 53, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
]
arcturs_matrix = [
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 52, 0, 0, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 51, 57, 62, 66, 70, 65, 64, 55, 51, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 54, 62, 69, 80, 84, 92, 93, 87, 73, 63, 54, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 53, 61, 80, 98, 114, 130, 141, 132, 124, 106, 86, 71, 58, 0, 0, 0, 0, 0],
    [0, 0, 0, 51, 60, 81, 102, 137, 168, 200, 211, 210, 181, 151, 122, 90, 72, 58, 0, 0, 0, 0],
    [0, 0, 0, 56, 74, 103, 137, 192, 255, 255, 255, 255, 255, 220, 165, 118, 92, 65, 54, 0, 0, 0],
    [0, 0, 0, 64, 85, 125, 178, 255, 255, 255, 255, 255, 255, 255, 221, 155, 107, 82, 59, 0, 0, 0],
    [0, 0, 0, 69, 97, 141, 229, 255, 255, 255, 255, 255, 255, 255, 255, 192, 128, 89, 69, 0, 0, 0],
    [0, 0, 53, 73, 103, 157, 255, 255, 255, 255, 255, 255, 255, 255, 255, 220, 145, 101, 73, 57, 0, 0],
    [0, 0, 53, 73, 106, 162, 255, 255, 255, 255, 255, 255, 255, 255, 255, 226, 148, 106, 74, 58, 0, 0],
    [0, 0, 54, 70, 96, 149, 238, 255, 255, 255, 255, 255, 255, 255, 255, 213, 138, 102, 73, 58, 0, 0],
    [0, 0, 0, 60, 92, 124, 196, 255, 255, 255, 255, 255, 255, 255, 255, 179, 125, 90, 69, 53, 0, 0],
    [0, 0, 0, 59, 78, 111, 153, 222, 255, 255, 255, 255, 255, 255, 206, 147, 100, 78, 60, 0, 0, 0],
    [0, 0, 0, 51, 66, 80, 112, 153, 207, 247, 255, 255, 244, 197, 148, 109, 84, 69, 51, 0, 0, 0],
    [0, 0, 0, 0, 54, 71, 83, 107, 130, 160, 170, 171, 157, 131, 107, 86, 69, 57, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 56, 65, 77, 96, 102, 109, 111, 106, 92, 77, 64, 54, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 60, 66, 74, 80, 75, 74, 69, 60, 52, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 51, 54, 62, 56, 57, 53, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
]
quest_2_matrix = [
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 52, 55, 56, 57, 56, 54, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 52, 59, 64, 67, 73, 75, 71, 67, 62, 54, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 53, 62, 77, 85, 98, 104, 103, 104, 92, 81, 71, 59, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 54, 65, 82, 99, 122, 132, 148, 152, 144, 127, 113, 92, 74, 60, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 62, 82, 106, 134, 168, 197, 218, 225, 219, 192, 161, 130, 96, 77, 58, 0, 0],
    [0, 0, 0, 0, 0, 54, 74, 99, 134, 185, 231, 255, 255, 255, 255, 255, 231, 180, 129, 92, 69, 0, 0],
    [0, 0, 0, 0, 0, 62, 86, 124, 176, 248, 255, 255, 255, 255, 255, 255, 255, 240, 170, 118, 82, 58, 0],
    [0, 0, 0, 0, 0, 72, 101, 144, 227, 255, 255, 255, 255, 255, 255, 255, 255, 255, 223, 142, 94, 67, 0],
    [0, 0, 0, 0, 56, 78, 111, 171, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 167, 109, 73, 52],
    [0, 0, 0, 0, 57, 80, 122, 182, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 187, 119, 79, 56],
    [0, 0, 0, 0, 58, 80, 119, 186, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 194, 122, 80, 55],
    [0, 0, 0, 0, 54, 78, 115, 180, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 188, 121, 78, 56],
    [0, 0, 0, 0, 53, 76, 107, 160, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 166, 109, 76, 0],
    [0, 0, 0, 0, 0, 66, 91, 132, 207, 255, 255, 255, 255, 255, 255, 255, 255, 215, 141, 97, 65, 0, 0],
    [0, 0, 0, 0, 0, 57, 76, 114, 161, 232, 255, 255, 255, 255, 255, 255, 255, 230, 165, 117, 83, 57, 0],
    [0, 0, 0, 0, 0, 52, 69, 89, 122, 162, 209, 255, 255, 255, 255, 255, 217, 170, 124, 90, 68, 0, 0],
    [0, 0, 0, 0, 0, 0, 54, 70, 92, 120, 145, 173, 192, 197, 192, 172, 147, 120, 91, 70, 56, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 57, 70, 86, 101, 113, 130, 129, 128, 118, 103, 84, 69, 55, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 54, 61, 73, 82, 90, 94, 89, 81, 72, 65, 53, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 55, 59, 65, 62, 62, 61, 56, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
]


print(find_gradient(rifts_matrix))
print(find_gradient(arcturs_matrix))
print(find_gradient(quest_2_matrix))

