import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D

PTS = np.array([
    [-0.00528721, -0.03660778,  0.00451452],
    [ 0.00974357, -0.04728464,  0.00426239],
    [ 0.02992873, -0.05141518,  0.00390749],
    [ 0.05168989, -0.04547503,  0.00347064],
    [ 0.06960648, -0.02946145,  0.00309524],
    [ 0.07747788, -0.01297643,  0.00295862],
    [0.07836552, 0.00933803, 0.00294088],
    [0.07173502, 0.02620364, 0.00305215],
    [0.05327445, 0.04456937, 0.00343488],
    [0.03444451, 0.05106115, 0.00382693],
    [0.01245785, 0.0484411 , 0.00423839],
    [-0.00528474,  0.03661613,  0.00451269],
    [-0.01725647, -0.0248257 ,  0.01689365],
    [-0.00733262, -0.03638802,  0.01714991],
    [ 0.0245473 , -0.05088505,  0.01790286],
    [ 0.04453019, -0.04727108,  0.01840671],
    [ 0.06125597, -0.03582761,  0.01882223],
    [ 0.07358841, -0.01472054,  0.01912351],
    [0.07145974, 0.02049542, 0.01907877],
    [0.0545791 , 0.04162999, 0.01865561],
    [0.03428297, 0.05026314, 0.01813423],
    [0.01239109, 0.04869072, 0.01759768],
    [-0.00733078,  0.03639904,  0.01714939],
    [-0.01727938,  0.02475062,  0.01689143]
])

DIR = np.array([
    [-0.60688004, -0.75584205, -0.24576291],
    [-0.33720495, -0.90003042, -0.27611241],
    [ 0.11035048, -0.95576858, -0.27263381],
    [ 0.51196981, -0.84107304, -0.17459397],
    [ 0.83833736, -0.54169635, -0.06128241],
    [ 0.96998041, -0.23536262, -0.06117552],
    [ 0.98373745,  0.16887833, -0.06116157],
    [ 0.87571599,  0.48070836, -0.04517721],
    [ 0.54204116,  0.82528168, -0.15843461],
    [ 0.19284405,  0.94275266, -0.27208197],
    [-0.21963071,  0.92057199, -0.3229699 ],
    [-0.60688004,  0.75584205, -0.24576291],
    [-0.75344005, -0.64331363,  0.13592523],
    [-0.64614776, -0.74783871,  0.152415  ],
    [ 0.01024382, -0.93983665,  0.34147055],
    [ 0.36842103, -0.8465559 ,  0.38419924],
    [ 0.65268227, -0.62648053,  0.42606103],
    [ 0.84769881, -0.25119497,  0.46723422],
    [0.81854725, 0.35282319, 0.45331689],
    [0.5400044 , 0.73368009, 0.41244245],
    [0.18586076, 0.90365993, 0.38581669],
    [-0.22076738,  0.92403974,  0.31210946],
    [-0.64614776,  0.74783871,  0.152415  ],
    [-0.80510213,  0.57732451,  0.13604035]
])

start_index = 12
visited = np.full(len(PTS), False)
visited[start_index] = True

def find_nearest_index(pt, visited):
    min_distance = np.inf
    nearest_index = -1
    for i in range(len(PTS)):
        if visited[i]:
            continue
        distance = np.linalg.norm(PTS[i] - pt)
        if distance < min_distance:
            min_distance = distance
            nearest_index = i
    return nearest_index

pts = [PTS[start_index]]
dir = [DIR[start_index]]
while len(pts) < len(PTS):
    last_pt = pts[-1]
    nearest_index = find_nearest_index(last_pt, visited)
    visited[nearest_index] = True
    pts.append(PTS[nearest_index])
    dir.append(DIR[nearest_index])

pts = np.array(pts)
dir = np.array(dir)
fig = plt.figure()
ax = fig.add_subplot(111, projection='3d')

ax.plot(pts[:,0], pts[:,1], pts[:,2], '-o')  # 'o' 옵션으로 점을 표시

# 이제 plot_pts는 start_index에서 시작하는 새로운 배열입니다.

print('pts\n', pts)
print('dir\n', dir)


plt.show()


def regenerate_pts_by_dist(MODEL_DATA, DIRECTION):
    return